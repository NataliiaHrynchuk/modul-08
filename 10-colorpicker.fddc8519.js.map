{"version":3,"sources":["js/10-colorpicker.js"],"names":["colors","hex","rgb","palettContainer","document","querySelector","cardsMarkup","createColorCardsMarkup","map","join","onPalettecontainerClick","evt","target","classList","contains","swatchEl","parentColorCard","closest","removeActiveCardClas","addActiveCardClass","setBodyBgColor","dataset","color","body","style","backgroundColor","currentActivCard","remove","card","add","insertAdjacentHTML","addEventListener"],"mappings":";AAAA,MAAMA,EAAS,CACb,CAAEC,IAAK,UAAWC,IAAK,aACvB,CAAED,IAAK,UAAWC,IAAK,aACvB,CAAED,IAAK,UAAWC,IAAK,cACvB,CAAED,IAAK,UAAWC,IAAK,cACvB,CAAED,IAAK,UAAWC,IAAK,aACvB,CAAED,IAAK,UAAWC,IAAK,cACvB,CAAED,IAAK,UAAWC,IAAK,aACvB,CAAED,IAAK,UAAWC,IAAK,aACvB,CAAED,IAAK,UAAWC,IAAK,aACvB,CAAED,IAAK,UAAWC,IAAK,cACvB,CAAED,IAAK,UAAWC,IAAK,aACvB,CAAED,IAAK,UAAWC,IAAK,aACvB,CAAED,IAAK,UAAWC,IAAK,eAGnBC,EAAkBC,SAASC,cAAc,eACzCC,EAAcC,EAAuBP,GAK3C,SAASO,EAAwBP,GACzBA,OAAAA,EACNQ,IAAI,EAAEP,IAAAA,EAAKC,IAAAA,0FAKGD,qBACAC,oCACeD,0DAGjBA,sBACAC,8BAKVO,KAAK,IAGT,SAASC,EAAwBC,GAI9B,IAFqBA,EAAIC,OAAOC,UAAUC,SAAS,gBAGpD,OAUIC,MAAAA,EAAWJ,EAAIC,OACfI,EAAkBD,EAASE,QAAQ,eAEzCC,IACAC,EAAmBH,GAGnBI,EAAeL,EAASM,QAAQpB,KAEhC,SAASmB,EAAeE,GACtBlB,SAASmB,KAAKC,MAAMC,gBAAkBH,EAGxC,SAASJ,IACDQ,MAAAA,EAAmBtB,SAASC,cAAc,yBAC7CqB,GACDA,EAAiBb,UAAUc,OAAO,aAItC,SAASR,EAAoBS,GAC3BA,EAAKf,UAAUgB,IAAI,aA7DrB1B,EAAgB2B,mBAAmB,YAAaxB,GAEhDH,EAAgB4B,iBAAiB,QAASrB","file":"10-colorpicker.fddc8519.js","sourceRoot":"../src","sourcesContent":["const colors = [\n  { hex: '#f44336', rgb: '244,67,54'},\n  { hex: '#e91e63', rgb: '233,30,99'},\n  { hex: '#9c27b0', rgb: '156,39,176'},\n  { hex: '#673ab7', rgb: '103,58,183'},\n  { hex: '#3f51b5', rgb: '63,81,181'},\n  { hex: '#2196f3', rgb: '33,150,243'},\n  { hex: '#00bcd4', rgb: '0,188,212'},\n  { hex: '#009688', rgb: '0,150,136'},\n  { hex: '#4caf50', rgb: '76,175,80'},\n  { hex: '#ffeb3b', rgb: '255,235,59'},\n  { hex: '#ff9800', rgb: '255,152,0'},\n  { hex: '#795548', rgb: '121,85,72'},\n  { hex: '#607d8b', rgb: '96,125,139'},\n];\n\nconst palettContainer = document.querySelector('.js-palette');\nconst cardsMarkup = createColorCardsMarkup(colors);\npalettContainer.insertAdjacentHTML('beforeend', cardsMarkup);\n\npalettContainer.addEventListener('click', onPalettecontainerClick);\n\nfunction createColorCardsMarkup (colors) {\n return colors\n .map(({hex, rgb}) => {\n    return `\n    <div class=\"color-card\">\n    <div\n    class=\"color-swatch\"\n    data-hex=\"${hex}\"\n    data-rgb=\"${rgb}\"\n    style=\"background-color: ${hex}\">\n  </div>\n  <div class=\"color-meta\">\n    <p>HEX: ${hex}</p>\n    <p>RGB: ${rgb}</p>\n  </div>\n  </div> `;\n    \n  })\n   .join('');//join, щоб сформувати не масив, а строку\n}\n\nfunction onPalettecontainerClick(evt) {\n// console.log(evt.target);//щоб відслідкувати, де клікнули\nconst isColorSwatchEl = evt.target.classList.contains('color-swatch');//Елемент з класом color-swatch \n\nif(!isColorSwatchEl) {\n  return;\n}\n// const swatchEl = evt.target;//клікнутий елемент\n// console.log(swatchEl);//якщо клікнули не по елементу з класом color-swatch, то виходимо, а якщо навпаки, виводим поточний елемент в консоль\n// console.log(swatchEl.dataset.hex);//Виводить значення дата-атрибуту hex клікнутого елемента\n\n// swatchEl.classList.add('is-active');//клікнутому елементу додаємо клас is-active, а якщо нам потрібно на батьківський елемент, то шукаємо через parentNode \n// const parentColorCard = swatchEl.parentNode;\n// console.log(parentColorCard);//Виводить батьківський елемент клікнутої картки\n\nconst swatchEl = evt.target;\nconst parentColorCard = swatchEl.closest('.color-card');//якщо багато рівнів вкладеності, а нам потрібно знайти якогось предка через скількись рівнів вкладеності, шукаємо його за класом \n// console.log(parentColorCard);//Виводим в консоль предка з класом color-card\nremoveActiveCardClas();\naddActiveCardClass(parentColorCard);// Викликаємо ф-цію, яка додасть клас is-active на предка клікнутої картки з класом color-card\n// document.body.style.backgroundColor = swatchEl.dataset.hex;//має зафарбовувати лише body в поточний колір, але в мене чомусь зафарбовує все\n\nsetBodyBgColor(swatchEl.dataset.hex);//Викликаю ф-цію setBodyBgColor зі значення дата-атрибуту hex на клікнутому елементі\n}\nfunction setBodyBgColor(color) {\n  document.body.style.backgroundColor = color;\n }// ф-ція, яка передає бекграунд колор на боді, але в мене надає на всіх\n\nfunction removeActiveCardClas () {\n  const currentActivCard = document.querySelector('.color-card.is-active');//Шукаємо елемент з класом color-card, в якого є ще клас is-active \n  if(currentActivCard) {\n    currentActivCard.classList.remove('is-active');\n  }//якщо є карточка з класом color-card, в якого є ще клас is-active, то зняти клас is-active\n}\n\nfunction addActiveCardClass (card) {\n  card.classList.add('is-active');// на вказану картку додати клас is-active\n}\n\n//==========Шаблонізатор==========\n//---придумуєш шаблон\n// `<div>{{ name }}</div>`\n\n//---або такий\n// `<div><% name %></div>`\n\n//---або такий\n//  `<div>\n//  <p>{{ email }}</p>\n//  <p>{{ name }}</p>\n//  </div>`\n// і кидаєш його в шаблонізатор:\n\n// const template = SuperTEmplatingEngine.compile(`<div><p>{{ email }}</p><p>{{ name }}</p></div>`);\n// template({name: 'Mango', email: 'mango@dev'}) //'<div><p>mango@dev</p><p>Mango</p></div>'\n\n// function template(data) {\n//   return `<div><p>${data.email}</p><p>${data.name}</p></div>`\n// }\n\n\n//---------Є багато бібліотек шаблонізаторів.---------\n//--------Розглянемо Handlebars-----------\n//------підключається у html-файл----\n\n// <!-- Include Handlebars from a CDN -->\n// <script src=\"https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js\"></script>\n// <script>\n//   // compile the template\n//   var template = Handlebars.compile(\"Handlebars <b>{{doesWhat}}</b>\");\n//   // execute the compiled template and print the output to the console\n//   console.log(template({ doesWhat: \"rocks!\" }));\n// </script> \n"]}